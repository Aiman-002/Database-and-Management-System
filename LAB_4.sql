
--TASK1--
SELECT DEPARTMENT_ID, 
       COUNT(DISTINCT EMPLOYEE_ID) AS NUMBER_OF_EMPLOYEES , 
       AVG(SALARY)
FROM  HR.EMPLOYEES
GROUP BY DEPARTMENT_ID;


--TASK2--
SELECT   JOB_ID, COUNT(DISTINCT EMPLOYEE_ID) AS NUMBER_OF_EMPLOYEES
FROM     HR.EMPLOYEES
GROUP BY JOB_ID;

--TASK3--
SELECT   FIRST_NAME, LAST_NAME,EMPLOYEE_ID
FROM     HR.EMPLOYEES
WHERE    SALARY > (SELECT SALARY FROM HR.EMPLOYEES WHERE EMPLOYEE_ID = 163);

--TASK4--
SELECT   DEPARTMENT_ID
FROM     HR.EMPLOYEES
GROUP BY DEPARTMENT_ID 
HAVING MAX(SALARY)  >= 15000;


--TASK5--
SELECT   FIRST_NAME, LAST_NAME,DEPARTMENT_ID
FROM     HR.EMPLOYEES
WHERE    SALARY = (SELECT MIN(SALARY) FROM HR.EMPLOYEES );

--TASK56--
SELECT   FIRST_NAME, LAST_NAME,EMPLOYEE_ID,JOB_ID
FROM     HR.EMPLOYEES
WHERE    SALARY < ANY (SELECT SALARY FROM HR.EMPLOYEES WHERE JOB_ID = 'IT_PROG' );

--TASK7--
SELECT   *
FROM     HR.EMPLOYEES
WHERE   DEPARTMENT_ID NOT IN (SELECT DISTINCT DEPARTMENT_ID FROM HR.DEPARTMENTS WHERE MANAGER_ID BETWEEN 100 AND 200);

--TASK8--
SELECT   MANAGER_ID,MIN(SALARY)
FROM     HR.EMPLOYEES
WHERE   MANAGER_ID IS NOT NULL
GROUP BY MANAGER_ID 
HAVING MIN(SALARY) <> 2000
ORDER BY MIN(SALARY) DESC;


--TASK9--
CREATE TABLE HR.EMPLOYEE_BKP AS (SELECT * FROM HR.EMPLOYEES)

INSERT INTO HR.EMPLOYEE_BKP
SELECT *
FROM HR.EMPLOYEES
WHERE HIRE_DATE =  (SELECT START_DATE FROM HR.JOB_HISTORY WHERE TO_DATE(START_DATE,'DD,MON,YY') =  TO_DATE('13,JAN,01', 'DD,MON,YY')); 


--TASK10--
UPDATE HR.EMPLOYEES
SET SALARY = SALARY * 0.20
WHERE SALARY = 6000;


--TASK11--
DELETE FROM HR.EMPLOYEES_BKP 
WHERE DEPARTMENT_ID =  (SELECT DEPARTMENT_ID FROM HR.DEPARTMENTS WHERE DEPARTMENT_NAME = 'FINANCE') AND MANAGER_ID IS NOT NULL;

--TASK12--
SELECT COUNT(DEPARTMENT_ID)
FROM HR.EMPLOYEES 
WHERE SALARY > 20000
GROUP BY DEPARTMENT_ID 
HAVING COUNT(DEPARTMENT_ID) > 5














